package thebetweenlands.client.render.model.tile;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

/**
 * BLCarvingTable - TripleHeadedSheep
 * Created using Tabula 7.0.1
 */
public class ModelRuneCarvingTable extends Model {
    public ModelRenderer table_woodbase;
    public ModelRenderer table_woodbase_edgefront;
    public ModelRenderer table_woodbase_edgeback;
    public ModelRenderer leg_front_right1a;
    public ModelRenderer leg_front_left1a;
    public ModelRenderer leg_back_right1a;
    public ModelRenderer leg_back_left1a;
    public ModelRenderer lowershelf;
    public ModelRenderer stonebase;
    public ModelRenderer standard1a;
    public ModelRenderer basin_base;
    public ModelRenderer chisel_handle1;
    public ModelRenderer chisel_handle2;
    public ModelRenderer leg_front_right1b;
    public ModelRenderer leg_front_right_rope;
    public ModelRenderer leg_front_left1b;
    public ModelRenderer leg_front_left_rope;
    public ModelRenderer leg_back_right1b;
    public ModelRenderer leg_back_right_rope;
    public ModelRenderer leg_back_left1b;
    public ModelRenderer leg_back_left_rope;
    public ModelRenderer standard1b;
    public ModelRenderer vialholder_main;
    public ModelRenderer vaultholder_main;
    public ModelRenderer vial_base;
    public ModelRenderer vialholder1;
    public ModelRenderer vialholder2;
    public ModelRenderer vial_bottom;
    public ModelRenderer vial_top;
    public ModelRenderer vaultholder_connection;
    public ModelRenderer turnythingy1a;
    public ModelRenderer tube1a;
    public ModelRenderer turnythingy1b;
    public ModelRenderer tube1b;
    public ModelRenderer tube1c;
    public ModelRenderer tube1d;
    public ModelRenderer tube1e;
    public ModelRenderer tube1f;
    public ModelRenderer tube_support;
    public ModelRenderer tube1g;
    public ModelRenderer basin_wall_right;
    public ModelRenderer basin_wall_left;
    public ModelRenderer basin_wall_back;
    public ModelRenderer basin_wall_front;
    public ModelRenderer chisel_blade1;
    public ModelRenderer chisel_blade2;

    public ModelRuneCarvingTable() {
        this.texWidth = 128;
        this.texHeight = 64;
        this.leg_back_right1a = new ModelRenderer(this, 26, 33);
        this.leg_back_right1a.setPos(-3.0F, 0.0F, 3.0F);
        this.leg_back_right1a.addBox(-3.0F, 0.0F, 0.0F, 3, 5, 3, 0.0F);
        this.setRotateAngle(leg_back_right1a, 0.091106186954104F, -0.009075712110370514F, 0.091106186954104F);
        this.basin_wall_right = new ModelRenderer(this, 105, 30);
        this.basin_wall_right.setPos(1.0F, -1.0F, -4.0F);
        this.basin_wall_right.addBox(-1.0F, -2.0F, -4.0F, 1, 2, 8, 0.0F);
        this.tube1f = new ModelRenderer(this, 96, 42);
        this.tube1f.setPos(0.0F, 2.0F, 0.0F);
        this.tube1f.addBox(-1.0F, 0.0F, -1.0F, 1, 2, 1, 0.0F);
        this.setRotateAngle(tube1f, -0.7853981633974483F, 0.0F, 0.0F);
        this.basin_wall_back = new ModelRenderer(this, 105, 52);
        this.basin_wall_back.setPos(2.5F, -1.0F, -1.0F);
        this.basin_wall_back.addBox(-1.5F, -2.0F, 0.0F, 3, 2, 1, 0.0F);
        this.chisel_blade1 = new ModelRenderer(this, 92, 6);
        this.chisel_blade1.setPos(0.0F, -0.5F, 0.0F);
        this.chisel_blade1.addBox(-0.5F, 0.0F, -3.0F, 1, 0, 3, 0.0F);
        this.setRotateAngle(chisel_blade1, 0.0F, 0.0F, -0.27314402793711257F);
        this.standard1b = new ModelRenderer(this, 61, 38);
        this.standard1b.setPos(0.01F, -15.0F, 2.0F);
        this.standard1b.addBox(-1.0F, -2.0F, -2.0F, 2, 2, 2, 0.0F);
        this.setRotateAngle(standard1b, 0.36425021489121656F, 0.0F, 0.0F);
        this.leg_back_left1b = new ModelRenderer(this, 39, 43);
        this.leg_back_left1b.setPos(0.0F, 5.0F, 0.0F);
        this.leg_back_left1b.addBox(0.0F, 0.0F, 0.0F, 3, 6, 3, 0.0F);
        this.setRotateAngle(leg_back_left1b, 0.091106186954104F, 0.009075712110370514F, -0.091106186954104F);
        this.leg_back_right1b = new ModelRenderer(this, 26, 43);
        this.leg_back_right1b.setPos(0.0F, 5.0F, 0.0F);
        this.leg_back_right1b.addBox(-3.0F, 0.0F, 0.0F, 3, 6, 3, 0.0F);
        this.setRotateAngle(leg_back_right1b, 0.091106186954104F, -0.009075712110370514F, 0.091106186954104F);
        this.vialholder2 = new ModelRenderer(this, 70, 29);
        this.vialholder2.setPos(-2.0F, 0.0F, -1.0F);
        this.vialholder2.addBox(-3.0F, 0.0F, -1.0F, 3, 1, 1, 0.0F);
        this.leg_front_right1a = new ModelRenderer(this, 0, 33);
        this.leg_front_right1a.setPos(-3.0F, 0.0F, -3.0F);
        this.leg_front_right1a.addBox(-3.0F, 0.0F, -3.0F, 3, 5, 3, 0.0F);
        this.setRotateAngle(leg_front_right1a, -0.091106186954104F, 0.009075712110370514F, 0.091106186954104F);
        this.basin_base = new ModelRenderer(this, 101, 20);
        this.basin_base.setPos(-8.0F, -3.0F, 1.5F);
        this.basin_base.addBox(0.0F, -1.0F, -8.0F, 5, 1, 8, 0.0F);
        this.setRotateAngle(basin_base, 0.0F, -0.18203784098300857F, 0.0F);
        this.table_woodbase = new ModelRenderer(this, 0, 0);
        this.table_woodbase.setPos(0.0F, 12.0F, 0.0F);
        this.table_woodbase.addBox(-8.0F, -3.0F, -6.0F, 16, 3, 12, 0.0F);
        this.leg_front_right1b = new ModelRenderer(this, 0, 43);
        this.leg_front_right1b.setPos(0.0F, 5.0F, 0.0F);
        this.leg_front_right1b.addBox(-3.0F, 0.0F, -3.0F, 3, 6, 3, 0.0F);
        this.setRotateAngle(leg_front_right1b, -0.091106186954104F, 0.009075712110370514F, 0.091106186954104F);
        this.turnythingy1b = new ModelRenderer(this, 87, 29);
        this.turnythingy1b.setPos(-1.0F, 0.0F, 0.0F);
        this.turnythingy1b.addBox(-0.01F, -0.5F, -1.6F, 0, 1, 3, 0.0F);
        this.leg_back_left1a = new ModelRenderer(this, 39, 33);
        this.leg_back_left1a.setPos(3.0F, 0.0F, 3.0F);
        this.leg_back_left1a.addBox(0.0F, 0.0F, 0.0F, 3, 5, 3, 0.0F);
        this.setRotateAngle(leg_back_left1a, 0.091106186954104F, 0.009075712110370514F, -0.091106186954104F);
        this.vial_bottom = new ModelRenderer(this, 70, 36);
        this.vial_bottom.setPos(0.0F, -1.0F, 0.0F);
        this.vial_bottom.addBox(-2.0F, -4.0F, -2.0F, 4, 4, 4, 0.0F);
        this.tube_support = new ModelRenderer(this, 93, 50);
        this.tube_support.setPos(0.0F, 1.0F, -0.5F);
        this.tube_support.addBox(-0.5F, -0.5F, -1.0F, 3, 1, 2, 0.0F);
        this.leg_front_right_rope = new ModelRenderer(this, 0, 54);
        this.leg_front_right_rope.setPos(-1.5F, 0.0F, -1.5F);
        this.leg_front_right_rope.addBox(-2.0F, -1.0F, -2.0F, 4, 2, 4, 0.0F);
        this.setRotateAngle(leg_front_right_rope, 0.045553093477052F, 0.0F, -0.045553093477052F);
        this.tube1d = new ModelRenderer(this, 96, 34);
        this.tube1d.setPos(0.0F, 3.0F, 0.0F);
        this.tube1d.addBox(-1.0F, 0.0F, -0.5F, 1, 2, 1, 0.0F);
        this.setRotateAngle(tube1d, 0.0F, 0.0F, 0.5235987755982988F);
        this.chisel_handle2 = new ModelRenderer(this, 103, 0);
        this.chisel_handle2.setPos(3.0F, -3.0F, 2.5F);
        this.chisel_handle2.addBox(-0.5F, -1.0F, 0.0F, 1, 1, 3, 0.0F);
        this.setRotateAngle(chisel_handle2, 0.0F, -1.0927506446736497F, 0.0F);
        this.stonebase = new ModelRenderer(this, 42, 0);
        this.stonebase.setPos(0.0F, 9.0F, 0.0F);
        this.stonebase.addBox(-8.0F, 0.0F, -8.0F, 16, 3, 16, 0.0F);
        this.table_woodbase_edgefront = new ModelRenderer(this, 0, 16);
        this.table_woodbase_edgefront.setPos(0.0F, 0.0F, -6.0F);
        this.table_woodbase_edgefront.addBox(-6.0F, -3.0F, -2.0F, 12, 3, 2, 0.0F);
        this.chisel_handle1 = new ModelRenderer(this, 92, 0);
        this.chisel_handle1.setPos(5.0F, -3.0F, 3.5F);
        this.chisel_handle1.addBox(-0.5F, -1.0F, 0.0F, 1, 1, 4, 0.0F);
        this.setRotateAngle(chisel_handle1, 0.0F, -1.2292353921796064F, 0.0F);
        this.vaultholder_connection = new ModelRenderer(this, 87, 24);
        this.vaultholder_connection.setPos(-2.0F, 0.0F, 0.0F);
        this.vaultholder_connection.addBox(-2.0F, -1.0F, 0.0F, 2, 2, 2, 0.0F);
        this.leg_front_left1b = new ModelRenderer(this, 13, 43);
        this.leg_front_left1b.setPos(0.0F, 5.0F, 0.0F);
        this.leg_front_left1b.addBox(0.0F, 0.0F, -3.0F, 3, 6, 3, 0.0F);
        this.setRotateAngle(leg_front_left1b, -0.091106186954104F, -0.009075712110370514F, -0.091106186954104F);
        this.vial_base = new ModelRenderer(this, 70, 32);
        this.vial_base.setPos(-4.0F, 1.0F, 0.0F);
        this.vial_base.addBox(-1.0F, -1.0F, -1.0F, 2, 1, 2, 0.0F);
        this.setRotateAngle(vial_base, 0.0F, 0.136659280431156F, 0.0F);
        this.leg_back_left_rope = new ModelRenderer(this, 51, 54);
        this.leg_back_left_rope.setPos(1.5F, 0.0F, 1.5F);
        this.leg_back_left_rope.addBox(-2.0F, -1.0F, -2.0F, 4, 2, 4, 0.0F);
        this.setRotateAngle(leg_back_left_rope, -0.045553093477052F, 0.0F, 0.045553093477052F);
        this.table_woodbase_edgeback = new ModelRenderer(this, 0, 22);
        this.table_woodbase_edgeback.setPos(0.0F, 0.0F, 6.0F);
        this.table_woodbase_edgeback.addBox(-6.0F, -3.0F, 0.0F, 12, 3, 2, 0.0F);
        this.chisel_blade2 = new ModelRenderer(this, 103, 5);
        this.chisel_blade2.setPos(0.0F, -0.5F, 0.0F);
        this.chisel_blade2.addBox(-0.5F, 0.0F, -2.0F, 1, 0, 2, 0.0F);
        this.setRotateAngle(chisel_blade2, 0.0F, 0.0F, 0.31869712141416456F);
        this.leg_front_left1a = new ModelRenderer(this, 13, 33);
        this.leg_front_left1a.setPos(3.0F, 0.0F, -3.0F);
        this.leg_front_left1a.addBox(0.0F, 0.0F, -3.0F, 3, 5, 3, 0.0F);
        this.setRotateAngle(leg_front_left1a, -0.091106186954104F, -0.009075712110370514F, -0.091106186954104F);
        this.vial_top = new ModelRenderer(this, 70, 45);
        this.vial_top.setPos(0.0F, 0.0F, 0.0F);
        this.vial_top.addBox(-1.5F, 0.0F, -1.5F, 3, 1, 3, 0.0F);
        this.basin_wall_front = new ModelRenderer(this, 105, 56);
        this.basin_wall_front.setPos(2.5F, -1.0F, -7.0F);
        this.basin_wall_front.addBox(-1.5F, -2.0F, -1.0F, 3, 2, 1, 0.0F);
        this.leg_back_right_rope = new ModelRenderer(this, 34, 54);
        this.leg_back_right_rope.setPos(-1.5F, 0.0F, 1.5F);
        this.leg_back_right_rope.addBox(-2.0F, -1.0F, -2.0F, 4, 2, 4, 0.0F);
        this.setRotateAngle(leg_back_right_rope, -0.045553093477052F, 0.0F, -0.045553093477052F);
        this.vialholder1 = new ModelRenderer(this, 70, 26);
        this.vialholder1.setPos(-2.0F, 0.0F, 1.0F);
        this.vialholder1.addBox(-3.0F, 0.0F, 0.0F, 3, 1, 1, 0.0F);
        this.tube1g = new ModelRenderer(this, 96, 46);
        this.tube1g.setPos(-1.0F, 2.0F, 0.0F);
        this.tube1g.addBox(0.0F, 0.0F, -1.0F, 1, 2, 1, 0.0F);
        this.setRotateAngle(tube1g, 0.0F, 0.0F, -0.36425021489121656F);
        this.standard1a = new ModelRenderer(this, 61, 20);
        this.standard1a.setPos(4.0F, -3.0F, 5.0F);
        this.standard1a.addBox(-1.0F, -15.0F, 0.0F, 2, 15, 2, 0.0F);
        this.vaultholder_main = new ModelRenderer(this, 87, 20);
        this.vaultholder_main.setPos(-1.0F, -9.0F, 0.0F);
        this.vaultholder_main.addBox(-2.0F, 0.0F, 0.0F, 2, 1, 2, 0.0F);
        this.tube1a = new ModelRenderer(this, 96, 20);
        this.tube1a.setPos(-1.0F, 1.0F, 1.0F);
        this.tube1a.addBox(-0.5F, 0.0F, -0.5F, 1, 2, 1, 0.0F);
        this.basin_wall_left = new ModelRenderer(this, 105, 41);
        this.basin_wall_left.setPos(4.0F, -1.0F, -4.0F);
        this.basin_wall_left.addBox(0.0F, -2.0F, -4.0F, 1, 2, 8, 0.0F);
        this.tube1b = new ModelRenderer(this, 96, 24);
        this.tube1b.setPos(0.5F, 2.0F, 0.0F);
        this.tube1b.addBox(-1.0F, 0.0F, -0.5F, 1, 3, 1, 0.0F);
        this.setRotateAngle(tube1b, 0.0F, 0.0F, 0.5235987755982988F);
        this.turnythingy1a = new ModelRenderer(this, 87, 29);
        this.turnythingy1a.setPos(-2.0F, 0.0F, 1.0F);
        this.turnythingy1a.addBox(-1.0F, -0.5F, -0.5F, 1, 1, 1, 0.0F);
        this.setRotateAngle(turnythingy1a, 0.4553564018453205F, 0.0F, 0.0F);
        this.tube1e = new ModelRenderer(this, 96, 38);
        this.tube1e.setPos(0.0F, 2.0F, 0.5F);
        this.tube1e.addBox(-1.0F, 0.0F, -1.0F, 1, 2, 1, 0.0F);
        this.setRotateAngle(tube1e, -0.7853981633974483F, 0.0F, 0.0F);
        this.leg_front_left_rope = new ModelRenderer(this, 17, 54);
        this.leg_front_left_rope.setPos(1.5F, 0.0F, -1.5F);
        this.leg_front_left_rope.addBox(-2.0F, -1.0F, -2.0F, 4, 2, 4, 0.0F);
        this.setRotateAngle(leg_front_left_rope, 0.045553093477052F, 0.0F, 0.045553093477052F);
        this.vialholder_main = new ModelRenderer(this, 70, 20);
        this.vialholder_main.setPos(0.0F, -12.0F, 1.0F);
        this.vialholder_main.addBox(-2.0F, 0.0F, -2.0F, 4, 1, 4, 0.0F);
        this.tube1c = new ModelRenderer(this, 96, 29);
        this.tube1c.setPos(0.0F, 3.0F, 0.0F);
        this.tube1c.addBox(-1.0F, 0.0F, -0.5F, 1, 3, 1, 0.0F);
        this.setRotateAngle(tube1c, 0.0F, 0.0F, 0.5235987755982988F);
        this.lowershelf = new ModelRenderer(this, 20, 20);
        this.lowershelf.setPos(0.0F, 3.0F, 0.0F);
        this.lowershelf.addBox(-5.0F, 0.0F, -5.0F, 10, 2, 10, 0.0F);
        this.table_woodbase.addChild(this.leg_back_right1a);
        this.basin_base.addChild(this.basin_wall_right);
        this.tube1e.addChild(this.tube1f);
        this.basin_base.addChild(this.basin_wall_back);
        this.chisel_handle1.addChild(this.chisel_blade1);
        this.standard1a.addChild(this.standard1b);
        this.leg_back_left1a.addChild(this.leg_back_left1b);
        this.leg_back_right1a.addChild(this.leg_back_right1b);
        this.vialholder_main.addChild(this.vialholder2);
        this.table_woodbase.addChild(this.leg_front_right1a);
        this.table_woodbase.addChild(this.basin_base);
        this.leg_front_right1a.addChild(this.leg_front_right1b);
        this.turnythingy1a.addChild(this.turnythingy1b);
        this.table_woodbase.addChild(this.leg_back_left1a);
        this.vial_base.addChild(this.vial_bottom);
        this.tube1f.addChild(this.tube_support);
        this.leg_front_right1b.addChild(this.leg_front_right_rope);
        this.tube1c.addChild(this.tube1d);
        this.table_woodbase.addChild(this.chisel_handle2);
        this.table_woodbase.addChild(this.stonebase);
        this.table_woodbase.addChild(this.table_woodbase_edgefront);
        this.table_woodbase.addChild(this.chisel_handle1);
        this.vaultholder_main.addChild(this.vaultholder_connection);
        this.leg_front_left1a.addChild(this.leg_front_left1b);
        this.vialholder_main.addChild(this.vial_base);
        this.leg_back_left1b.addChild(this.leg_back_left_rope);
        this.table_woodbase.addChild(this.table_woodbase_edgeback);
        this.chisel_handle2.addChild(this.chisel_blade2);
        this.table_woodbase.addChild(this.leg_front_left1a);
        this.vial_base.addChild(this.vial_top);
        this.basin_base.addChild(this.basin_wall_front);
        this.leg_back_right1b.addChild(this.leg_back_right_rope);
        this.vialholder_main.addChild(this.vialholder1);
        this.tube1f.addChild(this.tube1g);
        this.table_woodbase.addChild(this.standard1a);
        this.standard1a.addChild(this.vaultholder_main);
        this.vaultholder_connection.addChild(this.tube1a);
        this.basin_base.addChild(this.basin_wall_left);
        this.tube1a.addChild(this.tube1b);
        this.vaultholder_connection.addChild(this.turnythingy1a);
        this.tube1d.addChild(this.tube1e);
        this.leg_front_left1b.addChild(this.leg_front_left_rope);
        this.standard1a.addChild(this.vialholder_main);
        this.tube1b.addChild(this.tube1c);
        this.table_woodbase.addChild(this.lowershelf);
    }

    @Override
    public void renderToBuffer(MatrixStack pMatrixStack, IVertexBuilder pBuffer, int pPackedLight, int pPackedOverlay, float pRed, float pGreen, float pBlue, float pAlpha) {  
        this.table_woodbase.render(pMatrixStack, pBuffer, pPackedLight, pPackedOverlay, pRed, pGreen, pBlue, pAlpha);
    }

    public void render() { 
        this.table_woodbase.render(0.0625f);
    }
    
    /**
     * This is a helper function from Tabula to set the rotation of model parts
     */
    public void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.xRot = x;
        modelRenderer.yRot = y;
        modelRenderer.zRot = z;
    }
}
