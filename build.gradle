plugins {
    id 'idea'
	id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}
base {
    archivesBaseName = project.archives_base_name // "${rootProject.archives_base_name}-${project.name}"
}
mixin {
    // Only uncomment if you need to generate the refmap. Remember to edit the refmap for the merged JAR file!
    // if (!file('src/main/resources/${rootProject.mod_id}_forge.refmap.json').exists()) {
    //   add(sourceSets.main, "${rootProject.mod_id}_forge.refmap.json")
    // }
}
minecraft {
    mappings channel: 'official', version: rootProject.minecraft_version
	copyIdeResources = true //Calls processResources when in dev
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'runClient'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			arg "-mixin.config=" + "betweenlands.mixins.json"
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'runServer'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			arg "-mixin.config=" + "betweenlands.mixins.json"
            mods {
                modServerRun {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'runData'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modDataRun {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
	maven { 
	    url "https://cursemaven.com"
        content { includeGroup "curse.maven" }
	}
	maven {
	    name = "jt-dev"
	    url = "https://maven.jt-dev.tech/releases"
	}
}

dependencies {
    minecraft "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
}

tasks.withType(JavaCompile).configureEach {
    source(sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(sourceSets.main.allJava)
}
processResources {
    from sourceSets.main.resources
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
            fg.component(it)
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
